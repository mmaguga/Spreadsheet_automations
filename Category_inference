// Function to retrieve the OpenAI API key from a separate spreadsheet
function getOpenAIKey() {
  var apiKeySpreadsheet = SpreadsheetApp.openById('API_KEY_SHEET_ID');
  var apiKeySheet = apiKeySpreadsheet.getSheetByName('TAB_NAME');
  var apiKey = apiKeySheet.getRange('A1').getValue();
  return apiKey;
}

// Perform text inference for each row
function performTextInferenceForEachRow() {
  var mainSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Sheet1');
  var lastRow = mainSheet.getLastRow();
  var range = mainSheet.getRange("B2:D" + lastRow);
  var values = range.getValues();

  var apiKey = getOpenAIKey();
  var apiUrl = "https://api.openai.com/v1/chat/completions";

  var headers = {
    "Authorization": "Bearer " + apiKey,
    "Content-Type": "application/json"
  };

  for (var i = 0; i < values.length; i++) {
    var firstUserQuestion = values[i][0]; // Located in column B
    var firstAssistantResponse = values[i][1]; // Located in column C
    var userFeedback = values[i][2]; // Located in column D
    if (userFeedback.trim() !== "") {

      // Defining the 'messages' array for conversations
      var messages = [
        {
          "role": "system",
          "content": "Your task is to:\n1. Analyse the " + firstUserQuestion + ", which corresponds to a user prompt, and the subsequent chatbot response " + firstAssistantResponse + ", then;\n2. Analyse the user free-text feedback " + userFeedback + " on the interaction, and lastly;\n3. You will provide with the category of the feedback.\n\n The feedback categories you will choose from, are the following:\n- 'Klarnawiki Design improvement',\n- 'Klarnawiki technical issue',\n- 'Positive feedback',\n- 'Klarnawiki content improvement',\n- 'Chatbot retrieval or functioning'.\n\nBelow some tips and examples to help you infer the feeback category:\n- If you don't know the category, then use 'unknown' as the key.\n- If the " + userFeedback + " free-text contains references to 'test', 'testing', or 'stress test', you can use 'Testing purposes' as the key.\n- If the " + userFeedback + " mentions the 'chatbot', 'bot', or related to the chatbot output (For exampple: 'the bot seems to not read tables', 'Good answer', 'I didn't get what I asked for!', or 'it doesn't read tables'), then you can infer that the feedback is likely 'Chatbot retrieval or functioning'.\n- If the " + userFeedback + " contains references to the design of Klarnawiki, or the layout, then you will know the category is 'Klarnawiki Design improvement'.\n- If the " + userFeedback + " contains references to the content of a page not being correct, or page inconsistencies. then the category should be 'Klarnawiki content improvement'\n- If the " + userFeedback + " contains references to Klarnawiki  not working, formating errors, or page loading times, then you will know the category is 'Klarnawiki technical issue'. \n- If the " + userFeedback + " contains 'null', then the Feedback_category should be 'Unknown'. REMEMBER to format your response/output as the feedback category itself, without any key or title or long text, but ONLY the infered feedback category. The feedback categories you will use are already provided in this prompt"
        },
        {
          "role": "assistant",
          "content": "Chatbot response: " + firstAssistantResponse
        },
        {
          "role": "user",
          "content": "User feedback: " + userFeedback
        }
      ];

      var payload = {
        "messages": messages,
        "max_tokens": 50,
        "temperature": 0,
        "stop": ["\n"],
        "model": "gpt-3.5-turbo"
      };

      var options = {
        "method": "POST",
        "headers": headers,
        "payload": JSON.stringify(payload)
      };

      var response = UrlFetchApp.fetch(apiUrl, options);
      var result = JSON.parse(response.getContentText());
      var feedbackCategory = result.choices[0].message.content.trim();

      var feedbackCategoryValue = feedbackCategory.replace("Feedback category: ", "");
      mainSheet.getRange(i + 2, 10).setValue(feedbackCategoryValue);
      Utilities.sleep(1000); // Delay between API calls (1 second)
    }
  }
}


function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Text Inference')
    .addItem('Perform Inference', 'performTextInferenceForEachRow')
    .addToUi();
}
